"""
Django settings for birja project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from django.urls import reverse_lazy
from pathlib import Path
from django.forms.renderers import TemplatesSetting

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-c1e=n@1rvti-dn59$sob*k_!*1mbmk@!48md59@7o64y)&9y7$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["192.168.137.1", 'localhost', 'teratrade.pro']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'panel.apps.PanelConfig',
    'main.apps.MainConfig',
    'support.apps.SupportConfig',
    'user_profile.apps.UserProfileConfig',
    'django.contrib.humanize',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'user_profile.middleware.RestrictStaffToAdminMiddleware',
    'user_profile.middleware.BansMiddleware',
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
    }
}

ROOT_URLCONF = 'birja.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates', ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTH_USER_MODEL = "user_profile.CustomUser"
AUTHENTICATION_BACKENDS = ['user_profile.backends.EmailBackend']

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        #'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
}

JAZZMIN_SETTINGS = {
    "site_title": "Panel",
    "site_header": "Tera",
    "site_brand": "Tera Trade",
    "site_logo": "images/logo.png",
    "login_logo": "images/logo.png",
    "icons": {
        "auth.Group": "fas fa-users",
        "support.SupportMessage": "fas fa-headset",

        "user_profile.BonusModel": "fas fa-gift",
        "user_profile.Fiat": "fas fa-comment-dollar",
        "user_profile.G2FA": "fas fa-key",
        "user_profile.P2P": "fas fa-handshake",
        "user_profile.SiteParameter": "fas fa-wrench",
        "user_profile.Token": "fab fa-bitcoin",
        "user_profile.UserReferer": "fa fa-link",
        "user_profile.UserToken": "fas fa-coins",
        "user_profile.UserTransaction": "fas fa-exchange-alt",
        "user_profile.UserVerification": "fas fa-id-card",
        "user_profile.CustomUser": "fas fa-user",
    },
    "custom_links": {
        "user_profile": [{
            "name": "Саппорт",
            "url": "panel:user_profile_support",
            "icon": "fas fa-comments",
            # "permissions": ["books.view_book"]
        }]
    },
    "usermenu_links": [
        {"name": "Google", "url": "https://google.com/", "new_window": True},
        {"model": "user_profile.BonusModel"}
    ],
}


LOGIN_REDIRECT_URL = reverse_lazy("main:index")
LOGOUT_REDIRECT_URL = reverse_lazy("user_profile:login")
LOGIN_URL = reverse_lazy("user_profile:login")

# FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'
# class CustomFormRenderer(TemplatesSetting):
#     form_template_name = "default_form_template.html"

# FORM_RENDERER = "birja.settings.CustomFormRenderer"

WSGI_APPLICATION = 'birja.wsgi.application'


CELERY_BROKER_URL = 'redis://localhost:6379'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

if DEBUG:
    STATICFILES_DIRS = [
        BASE_DIR / "static",
    ]
else:
    STATIC_ROOT = BASE_DIR / 'static'

MEDIA_URL = 'media/'

MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
